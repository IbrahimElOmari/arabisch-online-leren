name: K6 Smoke Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  k6-smoke:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup K6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: Create K6 smoke test script
        run: |
          cat > smoke-test.js << 'EOF'
          import http from 'k6/http';
          import { check, sleep } from 'k6';
          import { Rate } from 'k6/metrics';

          const failureRate = new Rate('failed_requests');

          export const options = {
            stages: [
              { duration: '30s', target: 10 },  // Ramp up
              { duration: '1m', target: 20 },   // Stay at 20 VUs
              { duration: '30s', target: 0 },   // Ramp down
            ],
            thresholds: {
              'http_req_duration': ['p(95)<400'],
              'failed_requests': ['rate<0.01'],
              'http_req_failed': ['rate<0.01'],
            },
          };

          export default function () {
            const baseUrl = __ENV.BASE_URL || 'http://localhost:8080';
            
            // Test homepage
            const res = http.get(baseUrl);
            
            const success = check(res, {
              'status is 200': (r) => r.status === 200,
              'response time < 400ms': (r) => r.timings.duration < 400,
            });

            failureRate.add(!success);
            
            sleep(1);
          }
          EOF

      - name: Setup Node.js (for building)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build:prod

      - name: Serve application
        run: |
          npx serve -s dist -l 8080 &
          sleep 5
          
      - name: Run K6 smoke test
        run: |
          k6 run smoke-test.js --out json=k6-results.json
        continue-on-error: false

      - name: Upload K6 results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: k6-smoke-results
          path: k6-results.json
          retention-days: 30

      - name: Parse and display results
        if: always()
        run: |
          echo "📊 K6 Smoke Test Results"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          if [ -f k6-results.json ]; then
            # Extract key metrics (simplified - in production use jq)
            echo "✅ Test completed - see artifacts for full report"
          else
            echo "⚠️ No results file generated"
          fi
